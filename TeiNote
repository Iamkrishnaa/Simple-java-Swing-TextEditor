/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.teispace.classroom;

import java.awt.Font;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileWriter;
import java.util.Scanner;
import javax.swing.JFileChooser;

/**
 *
 * @author krish
 */
public class TeiNote extends javax.swing.JFrame {

    /**
     * Creates new form TeiNote
     */
    public TeiNote() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        jLabelZoomDetail.setText("Font Size, " + textInput.getFont().getSize());
    }
    
    public void changeTitle(){
        if(filePath == null){
            this.setTitle("Tei Note" + " *Untitled");
        }else{
            this.setTitle("Tei Note  " + filePath);
        }
    }
    
    
    //method to create new file
    private void createFile(String path){
        File file = new File(path);
        try{
            if(file.createNewFile()){
                System.out.println("File Created Successfully");
            }else{
                System.out.println("File Already Exists");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        changeTitle();
    }
    
    //method to write contents to file
    private void writeFile(String path){
        
        if(!new File(filePath).exists()){
            createFile(path);
        }
        
        try{
            FileWriter writer = new FileWriter(path);
            writer.write(textInput.getText());
            writer.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        changeTitle();
    }
    
    //method to read file
    private void readFile(String path){
        try{
            File file = new File(path);
            Scanner scanner = new Scanner(file);
            
            StringBuilder builder = new StringBuilder();
            
            while(scanner.hasNextLine()){
                String data = scanner.nextLine();
                builder.append(data);
                //this helps to prevent creating extra line
                if(scanner.hasNextLine()){
                    builder.append("\n");
                }
            }
            
            textInput.setText(builder.toString());
            scanner.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        changeTitle();
        
//        textInput.setText("");
//        try{
//            FileInputStream fileStream = new FileInputStream(path);
//            int acv = 0;
//            while(acv != -1){
//                acv = fileStream.read();
//                textInput.append(String.valueOf((char)acv));
//            }
//        }catch(Exception e){}
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpMenu = new javax.swing.JPopupMenu();
        jPopUpMenuItemUndo = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jPopUpMenuItemCopy = new javax.swing.JMenuItem();
        panelBg = new javax.swing.JPanel();
        panelBottomBar = new javax.swing.JPanel();
        jLabelLineColumnNumber = new javax.swing.JLabel();
        jLabelZoomDetail = new javax.swing.JLabel();
        panelTextArea = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textInput = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItemopen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemSaveAs = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItemWordWrap = new javax.swing.JCheckBoxMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemZoomIn = new javax.swing.JMenuItem();
        jMenuItemZoomOut = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jMenuItemResetToDefault = new javax.swing.JMenuItem();
        jCheckBoxMenuItemStatusBar = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();

        jPopUpMenuItemUndo.setText("Undo");
        popUpMenu.add(jPopUpMenuItemUndo);
        popUpMenu.add(jSeparator8);

        jPopUpMenuItemCopy.setText("Copy");
        popUpMenu.add(jPopUpMenuItemCopy);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tei Note");

        jLabelLineColumnNumber.setText("Ln 0, Col 0");

        javax.swing.GroupLayout panelBottomBarLayout = new javax.swing.GroupLayout(panelBottomBar);
        panelBottomBar.setLayout(panelBottomBarLayout);
        panelBottomBarLayout.setHorizontalGroup(
            panelBottomBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomBarLayout.createSequentialGroup()
                .addComponent(jLabelLineColumnNumber)
                .addGap(18, 18, 18)
                .addComponent(jLabelZoomDetail)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBottomBarLayout.setVerticalGroup(
            panelBottomBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomBarLayout.createSequentialGroup()
                .addGroup(panelBottomBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLineColumnNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelZoomDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane1.setBorder(null);

        textInput.setColumns(20);
        textInput.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textInput.setRows(5);
        textInput.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textInputCaretUpdate(evt);
            }
        });
        textInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                textInputMouseReleased(evt);
            }
        });
        textInput.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                textInputCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        jScrollPane1.setViewportView(textInput);

        javax.swing.GroupLayout panelTextAreaLayout = new javax.swing.GroupLayout(panelTextArea);
        panelTextArea.setLayout(panelTextAreaLayout);
        panelTextAreaLayout.setHorizontalGroup(
            panelTextAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
        );
        panelTextAreaLayout.setVerticalGroup(
            panelTextAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelBgLayout = new javax.swing.GroupLayout(panelBg);
        panelBg.setLayout(panelBgLayout);
        panelBgLayout.setHorizontalGroup(
            panelBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBottomBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelBgLayout.setVerticalGroup(
            panelBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBgLayout.createSequentialGroup()
                .addComponent(panelTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBottomBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("New");
        jMenu1.add(jMenuItem2);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem7.setText("New Window");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItemopen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemopen.setText("Open...");
        jMenuItemopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemopenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemopen);

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSave);

        jMenuItemSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemSaveAs.setText("Save As...");
        jMenu1.add(jMenuItemSaveAs);
        jMenu1.add(jSeparator2);

        jMenuItem11.setText("Page Setup");
        jMenu1.add(jMenuItem11);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem12.setText("Print...");
        jMenu1.add(jMenuItem12);
        jMenu1.add(jSeparator3);

        jMenuItem13.setText("Exit");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuBar1.add(jMenu1);

        jMenu6.setText("Edit");

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem14.setText("Undo");
        jMenu6.add(jMenuItem14);
        jMenu6.add(jSeparator6);

        jMenuItem15.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem15.setText("Cut");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem15);

        jMenuItem16.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem16.setText("Copy");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem16);

        jMenuItem17.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem17.setText("Paste");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem17);

        jMenuItem18.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem18.setText("Delete");
        jMenu6.add(jMenuItem18);
        jMenu6.add(jSeparator4);

        jMenuItem19.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem19.setText("Search with Bing..");
        jMenu6.add(jMenuItem19);

        jMenuItem20.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem20.setText("Find...");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem20);
        jMenu6.add(jSeparator5);

        jMenuItem21.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItem21.setText("Find Next");
        jMenu6.add(jMenuItem21);

        jMenuItem22.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        jMenuItem22.setText("Find Previous");
        jMenu6.add(jMenuItem22);

        jMenuItem23.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem23.setText("Replace...");
        jMenu6.add(jMenuItem23);

        jMenuItem24.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem24.setText("Go To...");
        jMenu6.add(jMenuItem24);
        jMenu6.add(jSeparator7);

        jMenuItem25.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem25.setText("Select All");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem25);

        jMenuItem26.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem26.setText("Time/Date");
        jMenu6.add(jMenuItem26);

        jMenuBar1.add(jMenu6);

        jMenu4.setText("Format");

        jCheckBoxMenuItemWordWrap.setText("Word Wrap");
        jCheckBoxMenuItemWordWrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemWordWrapActionPerformed(evt);
            }
        });
        jMenu4.add(jCheckBoxMenuItemWordWrap);

        jMenuItem6.setText("Font");
        jMenu4.add(jMenuItem6);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("View");

        jMenu2.setText("Zoom");

        jMenuItemZoomIn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_UP, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemZoomIn.setText("Zoom in");
        jMenuItemZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemZoomInActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemZoomIn);

        jMenuItemZoomOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DOWN, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemZoomOut.setText("Zoom out");
        jMenuItemZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemZoomOutActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemZoomOut);
        jMenu2.add(jSeparator9);

        jMenuItemResetToDefault.setText("Reset To Default");
        jMenuItemResetToDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemResetToDefaultActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemResetToDefault);

        jMenu5.add(jMenu2);

        jCheckBoxMenuItemStatusBar.setSelected(true);
        jCheckBoxMenuItemStatusBar.setText("Status Bar");
        jCheckBoxMenuItemStatusBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemStatusBarActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItemStatusBar);

        jMenuBar1.add(jMenu5);

        jMenu3.setText("Help");

        jMenuItem1.setText("View Help");
        jMenu3.add(jMenuItem1);

        jMenuItem3.setText("Send Feedback");
        jMenu3.add(jMenuItem3);
        jMenu3.add(jSeparator1);

        jMenuItem4.setText("About Notepad");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        new TeiNote().setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItemopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemopenActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(this);
        filePath = fileChooser.getSelectedFile().getAbsolutePath();
        readFile(filePath);
    }//GEN-LAST:event_jMenuItemopenActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        if(filePath == null){
            JFileChooser fileChooser = new JFileChooser();
            int val = fileChooser.showSaveDialog(this);
            filePath = fileChooser.getSelectedFile().getAbsolutePath();
            System.out.println(filePath);
            
            if(val == JFileChooser.APPROVE_OPTION){
                writeFile(filePath);
            }
            
        }else{
            writeFile(filePath);
        }

//        String fileName = JOptionPane.showInputDialog("Enter a file name");
//        File file = new File(fileName + ".txt");
//        try {
//            FileOutputStream fos = new FileOutputStream(file);
//            byte [] a = textInput.getText().getBytes();
//            fos.write(a);
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(MenuBar.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(MenuBar.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        textInput.selectAll();
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void textInputCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_textInputCaretUpdate
        int caretPosition = textInput.getCaretPosition();
        int lineNumber, columnNumber;
        try{
            lineNumber = textInput.getLineOfOffset(caretPosition);
            columnNumber = caretPosition - textInput.getLineStartOffset(lineNumber);
            jLabelLineColumnNumber.setText("Ln " + Integer.toString(lineNumber)
                    + ", Col " + Integer.toString(columnNumber));
        }catch(Exception e){
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_textInputCaretUpdate

    private void textInputCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textInputCaretPositionChanged

    }//GEN-LAST:event_textInputCaretPositionChanged

    private void textInputMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textInputMouseReleased
        if(evt.getButton() == MouseEvent.BUTTON3){
            popUpMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_textInputMouseReleased

    
    private void setZoomSize(int zoomPer){
        jLabelZoomDetail.setText("Font Size, " + zoomPer);
    }
    
    private void jMenuItemZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemZoomInActionPerformed
        Font f = textInput.getFont();
        if(f.getSize() <= 100){
            textInput.setFont(new Font(f.getFontName(), f.getStyle(), f.getSize() + 2));
            setZoomSize(f.getSize());
        }
    }//GEN-LAST:event_jMenuItemZoomInActionPerformed

    
    private void jMenuItemZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemZoomOutActionPerformed
        Font f = textInput.getFont();
        if(f.getSize() >= 4){
            textInput.setFont(new Font(f.getFontName(), f.getStyle(), f.getSize() - 2));
            setZoomSize(f.getSize());
        }
    }//GEN-LAST:event_jMenuItemZoomOutActionPerformed

    private void jMenuItemResetToDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemResetToDefaultActionPerformed
        Font f = textInput.getFont();
        textInput.setFont(new Font(f.getFontName(), f.getStyle(), 14));
        setZoomSize(f.getSize());
    }//GEN-LAST:event_jMenuItemResetToDefaultActionPerformed

    private void jCheckBoxMenuItemStatusBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemStatusBarActionPerformed
        if(jCheckBoxMenuItemStatusBar.isSelected()){
            if(!panelBottomBar.isVisible()){
                panelBottomBar.setVisible(true);
            }
        }else{
            if(panelBottomBar.isVisible()){
                panelBottomBar.setVisible(false);
            }
        }
    }//GEN-LAST:event_jCheckBoxMenuItemStatusBarActionPerformed

    private void jCheckBoxMenuItemWordWrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemWordWrapActionPerformed
        if(jCheckBoxMenuItemWordWrap.isSelected()){
            textInput.setLineWrap(true);
            textInput.setWrapStyleWord(true);
        }else{
            textInput.setLineWrap(false);
            textInput.setWrapStyleWord(false);
        }
    }//GEN-LAST:event_jCheckBoxMenuItemWordWrapActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        new AboutTeiNote().setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    
   
    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
       
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeiNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeiNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeiNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeiNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeiNote().setVisible(true);
            }
        });
    }
    
    //file name
    private static String filePath = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemStatusBar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemWordWrap;
    private javax.swing.JLabel jLabelLineColumnNumber;
    private javax.swing.JLabel jLabelZoomDetail;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItemResetToDefault;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemSaveAs;
    private javax.swing.JMenuItem jMenuItemZoomIn;
    private javax.swing.JMenuItem jMenuItemZoomOut;
    private javax.swing.JMenuItem jMenuItemopen;
    private javax.swing.JMenuItem jPopUpMenuItemCopy;
    private javax.swing.JMenuItem jPopUpMenuItemUndo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JPanel panelBg;
    private javax.swing.JPanel panelBottomBar;
    private javax.swing.JPanel panelTextArea;
    private javax.swing.JPopupMenu popUpMenu;
    private javax.swing.JTextArea textInput;
    // End of variables declaration//GEN-END:variables
}
